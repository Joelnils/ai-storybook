// Netlify Functions Script - AI Storybook Creator
document.addEventListener('DOMContentLoaded', function() {
    initializeNetlifyStorybook();
});

function initializeNetlifyStorybook() {
    console.log('üåü Netlify AI Storybook Creator initialized');
    
    // Setup form handler
    const storyForm = document.getElementById('storyForm');
    if (storyForm) {
        storyForm.addEventListener('submit', handleNetlifyStoryGeneration);
    }
    
    // Setup theme selection
    setupThemeSelection();
    
    // Setup demo stories (static for now)
    setupDemoStories();
    
    // Test API connection (not needed for Netlify Functions)
    console.log('‚úÖ Using Netlify Functions - no health check needed');
}

// Handle story generation with Stripe Checkout
async function handleNetlifyStoryGeneration(event) {
    event.preventDefault();
    
    // Get form data
    const formData = new FormData(event.target);
    const storyData = {
        title: formData.get('storyTitle'),
        childName: formData.get('childName'),
        childAge: formData.get('childAge'),
        theme: getSelectedTheme(),
        parentEmail: formData.get('parentEmail'),
        details: formData.get('storyDetails')
    };
    
    // Validate form
    if (!validateStoryForm(storyData)) {
        return;
    }
    
    try {
        // Store email and story data for success page
        localStorage.setItem('customerEmail', storyData.parentEmail);
        localStorage.setItem('pendingStoryData', JSON.stringify(storyData));
        
        // Show payment processing
        showProgressiveLoading();
        updateLoadingProgress('F√∂rbereder betalning...', 0);
        
        // Try to create payment intent
        const paymentResponse = await netlifyAPI.createPaymentIntent(storyData);
        
        if (!paymentResponse.success) {
            throw new Error(paymentResponse.error || 'Failed to create payment');
        }
        
        updateLoadingProgress('Omdirigerar till betalning...', 1);
        
        // Redirect to Stripe Checkout URL
        window.location.href = paymentResponse.url;
        
    } catch (error) {
        hideLoading();
        console.error('‚ùå Payment setup failed:', error);
        
        // Check if it's a Stripe API key error or 404 error (development mode)
        if (error.message.includes('You did not provide an API key') || 
            error.message.includes('Failed to execute') || 
            error.message.includes('404')) {
            const userChoice = confirm(
                'üöß UTVECKLINGSL√ÑGE üöß\\n\\n' +
                'Stripe API-nycklarna √§r inte konfigurerade √§n.\\n\\n' +
                'Vill du testa sagogenerering utan betalning?\\n\\n' +
                'Klicka OK f√∂r att skapa saga direkt\\n' +
                'Klicka Avbryt f√∂r att avbryta\\n\\n' +
                '(Detta √§r bara f√∂r utveckling och testning)'
            );
            
            if (userChoice) {
                await handleDevelopmentStoryGeneration(storyData);
                return;
            }
        }
        
        showError('Det gick inte att f√∂rbereda betalningen: ' + error.message);
    }
}

// Development mode story generation (without payment)
async function handleDevelopmentStoryGeneration(storyData) {
    try {
        console.log('üöß Running in development mode - no payment required');
        
        // Show story generation progress
        showProgressiveLoading();
        updateLoadingProgress('Skapar din ber√§ttelse... (utvecklingsl√§ge)', 0);
        
        // Create a mock story for testing until functions are fixed
        const mockStory = {
            title: storyData.title,
            childName: storyData.childName,
            content: `${storyData.childName} b√∂rjade sitt √§ventyr i ${storyData.theme} v√§rlden. Detta var b√∂rjan p√• en magisk resa som skulle f√∂r√§ndra allt.

N√§r ${storyData.childName} gick djupare in i √§ventyret, uppt√§ckte hen saker som aldrig tidigare sk√•dats. Varje steg fram√•t var fyllt med sp√§nning och nyfikenhet.

Pl√∂tsligt tr√§ffade ${storyData.childName} en v√§nlig karakt√§r som skulle bli hens guide genom resten av resan. Tillsammans skulle de l√∂sa mysterier och √∂vervinna utmaningar.

√Ñventyret tog en ov√§ntat v√§ndning n√§r ${storyData.childName} uppt√§ckte en hemlig kraft inom sig sj√§lv. Denna kraft skulle bli nyckeln till att l√∂sa det stora mysteriet.

Med mod och klokhet lyckades ${storyData.childName} √∂vervinna alla hinder. Hen l√§rde sig viktiga lektioner om v√§nskap, mod och att tro p√• sig sj√§lv.

Till slut √•terv√§nde ${storyData.childName} hem, f√∂r√§ndrad av √§ventyret och fylld med visdom att dela med andra. Resan var √∂ver, men minnena skulle leva f√∂r evigt.`,
            images: [
                { position: 0, url: 'images/demo_prinsessan_0.png', description: '√Ñventyrets b√∂rjan' },
                { position: 1, url: 'images/demo_prinsessan_1.png', description: 'Uppt√§ckt av nya v√§rldar' },
                { position: 2, url: 'images/demo_prinsessan_2.png', description: 'Tr√§ffar en guide' },
                { position: 3, url: 'images/demo_prinsessan_3.png', description: 'Uppt√§cker inre kraft' },
                { position: 4, url: 'images/demo_prinsessan_4.png', description: '√ñvervinner utmaningar' },
                { position: 5, url: 'images/demo_prinsessan_5.png', description: 'Hemkomst med visdom' }
            ]
        };
        
        // Simulate AI processing time
        setTimeout(() => {
            updateLoadingProgress('AI genererar text...', 1);
        }, 2000);
        
        setTimeout(() => {
            updateLoadingProgress('Skapar illustrationer...', 2);
        }, 4000);
        
        setTimeout(() => {
            // Hide loading
            hideLoading();
            
            // Show story result
            displayStoryResult(mockStory);
            
            // Show development notice
            setTimeout(() => {
                alert('üöß UTVECKLINGSL√ÑGE - MOCK SAGA üöß\\n\\n' +
                      'Detta √§r en test-saga medan Netlify Functions konfigureras.\\n\\n' +
                      'I produktionsl√§get skapas en riktig personlig saga med AI\\n' +
                      'och skickas via email f√∂r 50 kr.');
            }, 1000);
        }, 6000);
        
    } catch (error) {
        hideLoading();
        console.error('‚ùå Development story generation failed:', error);
        showError('Det gick inte att skapa sagan i utvecklingsl√§ge: ' + error.message);
    }
}

function validateStoryForm(data) {
    if (!data.title) {
        showError('V√§nligen ange en titel f√∂r sagan.');
        return false;
    }
    
    if (!data.childName) {
        showError('V√§nligen ange barnets namn.');
        return false;
    }
    
    if (!data.childAge) {
        showError('V√§nligen v√§lj barnets √•lder.');
        return false;
    }
    
    if (!data.theme) {
        showError('V√§nligen v√§lj ett tema f√∂r sagan.');
        return false;
    }
    
    if (!data.parentEmail) {
        showError('V√§nligen ange f√∂r√§lderns email.');
        return false;
    }
    
    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(data.parentEmail)) {
        showError('V√§nligen ange en giltig email-adress.');
        return false;
    }
    
    return true;
}

function setupThemeSelection() {
    const themeOptions = document.querySelectorAll('.theme-option');
    
    themeOptions.forEach(option => {
        option.addEventListener('click', function() {
            // Remove selected class from all options
            themeOptions.forEach(opt => opt.classList.remove('selected'));
            
            // Add selected class to clicked option
            this.classList.add('selected');
            
            console.log('Theme selected:', this.dataset.theme);
        });
    });
}

function getSelectedTheme() {
    const selectedTheme = document.querySelector('.theme-option.selected');
    return selectedTheme ? selectedTheme.dataset.theme : null;
}

function showLoading(message = 'Laddar...') {
    const loadingElement = document.getElementById('loadingAnimation');
    const loadingText = loadingElement.querySelector('.loading-text');
    
    if (loadingText) {
        loadingText.textContent = message;
    }
    
    // Force show with inline styles
    loadingElement.style.display = 'flex';
    loadingElement.style.position = 'fixed';
    loadingElement.style.top = '0';
    loadingElement.style.left = '0';
    loadingElement.style.width = '100vw';
    loadingElement.style.height = '100vh';
    loadingElement.style.background = 'rgba(0, 0, 0, 0.8)';
    loadingElement.style.zIndex = '999999';
    loadingElement.style.justifyContent = 'center';
    loadingElement.style.alignItems = 'center';
    loadingElement.style.flexDirection = 'column';
    
    console.log('üîç Loading shown with display:', loadingElement.style.display);
}

function hideLoading() {
    const loadingElement = document.getElementById('loadingAnimation');
    
    // Force hide with inline styles
    loadingElement.style.display = 'none';
    
    // Clear any pending progress updates
    window.storyGenerationComplete = true;
    
    console.log('üìù Loading hidden - display set to:', loadingElement.style.display);
}

function displayStoryResult(story, isDemo = false) {
    const resultSection = document.getElementById('storyResult');
    const titleElement = document.getElementById('generatedTitle');
    const subtitleElement = document.getElementById('generatedSubtitle');
    const contentElement = document.getElementById('storyContent');
    
    // Set title and subtitle
    titleElement.textContent = story.title;
    subtitleElement.textContent = `En personlig saga f√∂r ${story.childName}`;
    
    // Display story content with images
    displayStoryWithImages(story, contentElement);
    
    // Show result section
    resultSection.style.display = 'block';
    resultSection.scrollIntoView({ behavior: 'smooth' });
    
    // Store story for PDF generation
    window.currentStory = story;
}

function displayStoryWithImages(story, container) {
    container.innerHTML = '';
    
    const paragraphs = story.content.split('\n\n').filter(p => p.trim());
    
    paragraphs.forEach((paragraph, index) => {
        // Create page container
        const pageDiv = document.createElement('div');
        pageDiv.className = 'story-page';
        
        // Add image for this page
        const storyImage = story.images.find(img => img.position === index);
        if (storyImage) {
            const imgElement = document.createElement('img');
            imgElement.src = storyImage.url;
            imgElement.alt = `Illustration f√∂r sida ${index + 1}`;
            imgElement.className = 'story-image';
            imgElement.style.maxWidth = '100%';
            imgElement.style.borderRadius = '12px';
            imgElement.style.marginBottom = '20px';
            
            pageDiv.appendChild(imgElement);
        }
        
        // Add paragraph text
        const textDiv = document.createElement('div');
        textDiv.className = 'story-text';
        textDiv.innerHTML = `<p>${paragraph.trim()}</p>`;
        pageDiv.appendChild(textDiv);
        
        container.appendChild(pageDiv);
    });
}

// PDF Download Function
async function downloadPDF() {
    try {
        if (!window.currentStory) {
            showError('Ingen saga att ladda ner.');
            return;
        }
        
        showLoading('Skapar PDF... üìÑ');
        
        const pdf = await netlifyAPI.createPDF(window.currentStory);
        pdf.save(`${window.currentStory.title} - ${window.currentStory.childName}.pdf`);
        
        hideLoading();
        
    } catch (error) {
        hideLoading();
        console.error('‚ùå PDF download error:', error);
        showError('Det gick inte att skapa PDF:en: ' + error.message);
    }
}

// Share Story
function shareStory() {
    if (navigator.share && window.currentStory) {
        navigator.share({
            title: window.currentStory.title,
            text: `Kolla in den h√§r AI-skapade sagan: ${window.currentStory.title}`,
            url: window.location.href
        });
    } else {
        // Fallback
        const text = `Kolla in den h√§r AI-skapade sagan: ${window.currentStory.title}`;
        navigator.clipboard.writeText(text).then(() => {
            alert('L√§nk kopierad till urklipp!');
        });
    }
}

// Create New Story
function createNewStory() {
    // Reset form
    document.getElementById('storyForm').reset();
    
    // Clear theme selection
    document.querySelectorAll('.theme-option').forEach(opt => opt.classList.remove('selected'));
    
    // Hide result
    document.getElementById('storyResult').style.display = 'none';
    
    // Clear stored story
    window.currentStory = null;
    
    // Scroll to form
    document.getElementById('create').scrollIntoView({ behavior: 'smooth' });
}

// Demo Stories Data
const demoStories = {
    'j√§ttefisken': {
        title: 'Sagan om J√§ttefisken',
        childName: 'Mia',
        content: `Mia stod vid havets kant, tittade ut √∂ver det skimrande vattnet och undrade vad som fanns under ytan. Idag var dagen d√• hon skulle f√• reda p√• det. Utstyrd med simf√∂tter, dykmask och snorkel tog hon sina f√∂rsta f√∂rsiktiga simtag mot √§ventyret.

Medan Mia utforskade det underbara korallriket, m√∂tte hon f√§rgglada fiskar som lekte i vattnet. Hon sv√§vade f√∂rbi anemoner som vajade mjukt i str√∂mmarna och uppt√§ckte skimrande sj√∂stj√§rnor p√• mjuka sandbottnar. D√• s√•g hon n√•got stort som r√∂rde sig i det bl√•.

En enorm j√§ttefisk, med fj√§ll som skimrade i alla regnb√•gens f√§rger, simmade lugnt fram till henne. Mia k√§nde f√∂rst en r√§dsla, men j√§ttefiskens v√§nliga √∂gon visade att den bara var nyfiken. "Hej, jag heter Mia," sa hon. "Och jag √§r en j√§ttefisk," svarade den med en r√∂st som var djup och mild.

J√§ttefisken visade Mia runt i havets underverk. De simmade genom hemliga passager, f√∂rbi gamla skeppsvrak och utforskade koralltr√§dg√•rdar som Mia aldrig hade kunnat f√∂rest√§lla sig. "Havet √§r fullt av hemligheter," sa j√§ttefisken. "Och v√§nskap √§r den st√∂rsta skatten."

N√§r solen b√∂rjade sjunka mot horisonten, visste Mia att det var dags att √•terv√§nda. J√§ttefisken vinkade farv√§l med sin stora stj√§rtfena. "Kom tillbaka snart," sa den. Mia simmade tillbaka till stranden, fylld av tacksamhet och under √∂ver de magiska √§ventyren hon upplevt.

Mia satt p√• stranden och tittade ut √∂ver havet i skymningen. Hon visste att hon alltid skulle b√§ra med sig minnet av j√§ttefisken och de hemliga undervattensv√§rldarna. Och hon visste att mer √§ventyr v√§ntade, bara hon var modig nog att dyka in i det ok√§nda.`,
        images: [
            { position: 0, url: 'images/demo_j√§ttefisken_0.png', description: 'Mia vid havets kant med simf√∂tter och mask' },
            { position: 1, url: 'images/demo_j√§ttefisken_1.png', description: 'F√§rgglada fiskar i korallriket' },
            { position: 2, url: 'images/demo_j√§ttefisken_2.png', description: 'Den enorma j√§ttefisken tr√§ffar Mia' },
            { position: 3, url: 'images/demo_j√§ttefisken_3.png', description: 'J√§ttefisken visar Mia havets underverk' },
            { position: 4, url: 'images/demo_j√§ttefisken_4.png', description: 'Avsked vid solnedg√•ngen' },
            { position: 5, url: 'images/demo_j√§ttefisken_5.png', description: 'Mia p√• stranden i skymningen' }
        ]
    },
    'prinsessan': {
        title: 'Prinsessan och Stj√§rnan',
        childName: 'Livia',
        content: `Det var en g√•ng en modig liten prinsessa vid namn Livia. Hon √§lskade att springa runt i det kungliga slottets stora tr√§dg√•rd och dr√∂mma om √§ventyr. Men mest av allt √§lskade hon att titta p√• stj√§rnhimlen n√§r m√∂rkret hade lagt sig och allt var tyst.

En kv√§ll, n√§r Livia l√•g i gr√§set och betraktade stj√§rnorna, s√•g hon en som blinkade s√§rskilt klart. Pl√∂tsligt, med ett svagt ljud, f√∂ll den blinkande stj√§rnan fr√•n himlen och landade alldeles intill henne. Livia blev f√∂rst lite r√§dd, men hennes nyfikenhet vann √∂ver r√§dslan och hon gick n√§rmare f√∂r att unders√∂ka.

Vid foten av ett gammalt √§ppeltr√§d l√•g en liten ljusglimt, det var den fallna stj√§rnan. Livia str√§ckte f√∂rsiktigt ut handen och till hennes f√∂rv√•ning b√∂rjade stj√§rnan vibrera och blev till en liten flicka, lika vacker och skimrande som en stj√§rna. Flickan presenterade sig som Stella och ber√§ttade att hon var en stj√§rna som hade fallit ner p√• jorden.

Stella var ledsen f√∂r hon visste inte hur hon skulle komma tillbaka till stj√§rnhimlen. Livia lovade att hon skulle hj√§lpa henne. Trots att hon var os√§ker p√• hur, visste hon att v√§nliga handlingar alltid leder till l√∂sningar. Tillsammans begav de sig ut p√• ett √§ventyr f√∂r att hitta ett s√§tt att f√∂ra Stella tillbaka till himlen.

Under deras √§ventyr st√∂tte de p√• m√•nga utmaningar, men Livia var alltid d√§r f√∂r att hj√§lpa Stella. Hon anv√§nde sin klokhet och sitt mod f√∂r att l√∂sa problemen de st√∂tte p√•. Hon visade att man inte beh√∂ver vara stor f√∂r att g√∂ra stora saker, och att mod inte handlar om att vara or√§dd, utan om att g√∂ra det r√§tta trots att man √§r r√§dd.

Till slut, efter m√•nga √§ventyr, fann de en gammal trollkarl som visste hur man kunde skicka Stella tillbaka till stj√§rnhimlen. Livia k√§nde sig ledsen √∂ver att beh√∂va s√§ga hejd√• till sin nya v√§n, men hon visste att det var det r√§tta att g√∂ra. N√§r Stella √•terv√§nde till himlen, blev hon den klaraste stj√§rnan p√• natthimlen, alltid p√•minnande Livia om deras √§ventyr tillsammans.`,
        images: [
            { position: 0, url: 'images/demo_prinsessan_0.png', description: 'Prinsessan Livia i slottstr√§dg√•rden' },
            { position: 1, url: 'images/demo_prinsessan_1.png', description: 'Stj√§rnan faller fr√•n himlen' },
            { position: 2, url: 'images/demo_prinsessan_2.png', description: 'Livia tr√§ffar Stella vid √§ppeltr√§det' },
            { position: 3, url: 'images/demo_prinsessan_3.png', description: 'Livia lovar att hj√§lpa Stella' },
            { position: 4, url: 'images/demo_prinsessan_4.png', description: '√Ñventyr och utmaningar tillsammans' },
            { position: 5, url: 'images/demo_prinsessan_5.png', description: 'Stella √•terv√§nder till stj√§rnhimlen' }
        ]
    },
    'r√§ven': {
        title: 'Sagan om R√§ven',
        childName: 'Joel',
        content: `Joel gick genom den tjocka skogen en solig eftermiddag, nyfiken p√• vad han skulle uppt√§cka. Tr√§den skapade ett gr√∂nt tak √∂ver honom, och f√•glarnas s√•ng fyllde luften med melodi.

Pl√∂tsligt h√∂rde han ett svagt gn√§ll fr√•n en buske. Joel tittade n√§rmare och s√•g en liten r√§vunge som satt fast under en gren. F√∂rsiktigt lyfte Joel grenen och befriade den lilla r√§ven. "Tack s√• mycket," sa r√§vungen med en pip. "Jag heter R√∂dis."

Joel och R√∂dis blev snabbt v√§nner. R√∂dis visade Joel hemliga stigar genom skogen som endast djuren k√§nde till. De lekte kurrag√∂mma bland tr√§den och delade b√§r som de plockade l√§ngs v√§gen.

En dag, n√§r de utforskade en ny del av skogen, blev de vilse. Joel k√§nde sig orolig, men R√∂dis sa lugnt, "Oroa dig inte, Joel. Vi kan anv√§nda v√•ra sinnen f√∂r att hitta v√§gen hem." Tillsammans anv√§nde de ljud, dofter och ledtr√•dar fr√•n naturen f√∂r att navigera.

Efter en l√•ng dag av √§ventyr hittade de till slut tillbaka. Joel ins√•g hur viktig v√§nskap var och hur mycket han l√§rt sig fr√•n sin nya v√§n. R√∂dis hade l√§rt honom att lita p√• naturen och sina egna f√∂rm√•gor.

Fr√•n den dagen bes√∂kte Joel skogen ofta f√∂r att tr√§ffa R√∂dis. Deras v√§nskap v√§xte starkare f√∂r varje √§ventyr de delade, och Joel f√∂rstod att v√§nskap och mod kan hj√§lpa en att √∂vervinna alla utmaningar som livet f√∂r med sig.`,
        images: [
            { position: 0, url: 'images/demo_rÔøΩven_0.png', description: 'Joel g√•r genom den tjocka skogen' },
            { position: 1, url: 'images/demo_rÔøΩven_1.png', description: 'Joel r√§ddar r√§vungen R√∂dis' },
            { position: 2, url: 'images/demo_rÔøΩven_2.png', description: 'Joel och R√∂dis leker i skogen' },
            { position: 3, url: 'images/demo_rÔøΩven_3.png', description: 'De blir vilse i skogen' },
            { position: 4, url: 'images/demo_rÔøΩven_4.png', description: 'Joel och R√∂dis hittar hem tillsammans' },
            { position: 5, url: 'images/demo_rÔøΩven_5.png', description: 'V√§nskap som varar f√∂r evigt' }
        ]
    }
};

// Demo Stories
function setupDemoStories() {
    console.log('üìö Demo stories loaded');
}

async function readDemoStory(storyId) {
    console.log('üìñ Reading demo story:', storyId);
    
    const story = demoStories[storyId];
    if (!story) {
        showError('Demo-saga hittades inte: ' + storyId);
        return;
    }
    
    // Display the demo story
    displayStoryResult(story, true);
}

// Progressive loading with status updates
function showProgressiveLoading() {
    // Reset completion flag
    window.storyGenerationComplete = false;
    
    const loadingElement = document.getElementById('loadingAnimation');
    const loadingText = loadingElement.querySelector('.loading-text');
    const loadingSubtext = loadingElement.querySelector('.loading-subtext');
    
    if (!loadingElement) {
        console.error('‚ùå Loading element not found!');
        return;
    }
    
    if (loadingText) {
        loadingText.textContent = 'Skriver din ber√§ttelse... ‚ú®';
    }
    
    if (loadingSubtext) {
        loadingSubtext.textContent = 'Detta tar n√•gra minuter - AI skapar din personliga saga';
    }
    
    // Force show with all inline styles
    loadingElement.style.display = 'flex';
    loadingElement.style.position = 'fixed';
    loadingElement.style.top = '0';
    loadingElement.style.left = '0';
    loadingElement.style.width = '100vw';
    loadingElement.style.height = '100vh';
    loadingElement.style.background = 'rgba(0, 0, 0, 0.8)';
    loadingElement.style.zIndex = '999999';
    loadingElement.style.justifyContent = 'center';
    loadingElement.style.alignItems = 'center';
    loadingElement.style.flexDirection = 'column';
    
    console.log('üìù Progressive loading started and made visible');
    console.log('üîç Loading element display:', loadingElement.style.display);
}

function updateLoadingProgress(message, step) {
    // Don't update progress if story generation is complete
    if (window.storyGenerationComplete) {
        console.log('üö´ Skipping progress update - story complete');
        return;
    }
    
    const loadingText = document.querySelector('#loadingAnimation .loading-text');
    const loadingSubtext = document.querySelector('#loadingAnimation .loading-subtext');
    const loadingElement = document.getElementById('loadingAnimation');
    
    // Only update if loading element should be visible
    if (loadingElement && loadingElement.style.display === 'flex') {
        console.log(`üìä Updating progress: ${message} (step ${step})`);
        
        if (loadingText) {
            loadingText.textContent = message;
            console.log(`üìù Updated text: ${message}`);
        }
        
        const subtextMessages = [
            'AI skriver text baserat p√• dina √∂nskem√•l',
            'DALL-E skapar vackra bilder - detta tar 2-3 minuter',
            'Kombinerar text och bilder till din sagbok',
            'G√∂r de sista justeringarna'
        ];
        
        if (step < subtextMessages.length && loadingSubtext) {
            loadingSubtext.textContent = subtextMessages[step];
            console.log(`üìù Updated subtext: ${subtextMessages[step]}`);
        }
    } else {
        console.log('üö´ Loading element not visible, skipping progress update');
    }
}

// Error handling
function showError(message) {
    alert('‚ùå ' + message);
    console.error('Error:', message);
}

// Success messages
function showSuccess(message) {
    alert('‚úÖ ' + message);
    console.log('Success:', message);
}